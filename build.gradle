plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'net.stockkid'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

//	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'org.postgresql:postgresql'

	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	implementation group: 'org.hibernate', name: 'hibernate-core', version: '5.6.15.Final'
	implementation group: 'org.hibernate', name: 'hibernate-ehcache', version: '5.6.15.Final'

	implementation group: 'com.google.api-client', name: 'google-api-client', version: '2.2.0'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: '3.1.3'

//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	implementation group: 'org.bitbucket.b_c', name: 'jose4j', version: '0.9.3'
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir  = "$buildDir/generated/querydsl"

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile).configureEach {
	options.generatedSourceOutputDirectory.set(file(querydslDir))
}

clean.doLast {
	file(querydslDir).deleteDir()
}